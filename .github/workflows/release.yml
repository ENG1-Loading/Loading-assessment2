name: Release dev builds

on:
  push:
    branches: [main, testing, dev]
  workflow_run:
    workflows: [Java CI with Gradle]
    types: [completed]
    branches: [main, testing, dev]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            codecov: true
          - os: windows-latest
            codecov: false
          - os: macos-latest
            codecov: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Test
        run: ./gradlew clean test --info
        working-directory: ./PiazzaPanic
      - name: Build with Gradle
        run: ./gradlew desktop:dist
        working-directory: ./PiazzaPanic
        env:
          JAVA_HOME: ${{ steps.setup-jdk.outputs.path }}
      
      - name: Test Report
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: "${{ matrix.os }} Test Report"
          path: build/test-results/**/*.xml
          reporter: java-junit
          fail-on-error: true

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        if: ${{ matrix.codecov && success() }}
        with:
          dotnet-version: 6.x
          dotnet-quality: 'ga'

      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.17
        if: ${{ matrix.codecov && success() }}
        with:
          reports: build/jacoco.xml
          targetdir: out
          reporttypes: MarkdownSummaryGithub

      - name: Publish Coverage Report
        uses: PavanMudigonda/markdown-reporter@v0.1
        if: ${{ matrix.codecov && success() }}
        with:
          markdown_path: out/SummaryGithub.md
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_name: Coverage Report
          report_title: Code Coverage Report

      - name: Upload test output
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: build/test-results/**/*.xml
      - name: Rename jar file
        run: |
          pwd
          ls -la
          cd PiazzaPanic/desktop/build/libs
          VER=`git rev-parse --short HEAD`
          mv desktop-1.0.jar team17-piazzaPanic.jar
      - name: Automatically release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest-dev
          name: "Development Build"
          prerelease: true
          files: |
            PiazzaPanic/desktop/build/libs/*.jar
